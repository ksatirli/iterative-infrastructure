---

name: "Code Quality: Terraform"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: ["./terraform/azure", "./terraform/azure-compute", "./terraform/github"]
    defaults:
      run:
        working-directory: ${{ matrix.directory }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Run `terraform fmt`
        id: fmt
        run: terraform fmt -diff -check -no-color -recursive

      - name: Run `terraform init`
        id: init
        run: terraform init

      - name: Run `terraform validate`
        id: validate
        if: github.event_name == 'pull_request'
        run: terraform validate -no-color
          working-directory: ${{ matrix.directory }}

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true
          working-directory: ${{ matrix.directory }}

      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`
            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
          working-directory: ${{ matrix.directory }}

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
          working-directory: ${{ matrix.directory }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
          working-directory: ${{ matrix.directory }}